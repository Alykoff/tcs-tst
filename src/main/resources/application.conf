akka {
# actor {
#   provider = "akka.remote.RemoteActorRefProvider"
# }
#  loglevel = DEBUG
#  loggers = ["akka.event.slf4j.Slf4jLogger"]
#  loglevel = "DEBUG"
#  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    # enable function of LoggingReceive, which is to log any received message at
    # DEBUG level
    receive = on
    # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
    # autoreceive = on
  }
  remote {
#    log-remote-lifecycle-events = off
    transport = "akka.remote.netty.NettyRemoteTransport"
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
      #      host = "127.0.0.1"
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551",
    ]
#    "akka.tcp://ClusterSystem@127.0.0.1:2552"

    metrics {
      enabled = off
      # Sigar native library extract location during tests.
      # Note: use per-jvm-instance folder when running multiple jvm on one host.
#      gossip-interval = 10s
#      native-library-extract-folder = ${user.dir}/target/native
    }
    manager.min-nr-of-members = 1
    worker.min-nr-of-members = 2
    auto-down-unreachable-after = 10s
#    min-nr-of-members = 2
  }
  log-dead-letters=2
  log-dead-letters-during-shutdown=on

#  extensions = [
#    "akka.cluster.metrics.ClusterMetricsExtension"
#  ]
}